# frozen_string_literal: true

require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/notifications', type: :request do
  let(:user) { create(:admin) }
  before(:each) do
    sign_in(user)
  end
  # This should return the minimal set of attributes required to create a valid
  # Notification. As you add validations to Notification, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) do
    { title: Faker::Book.title, text: Faker::Restaurant.review, user_ids: [user.id] }
  end

  describe 'GET /index' do
    it 'renders a successful response' do
      Notification.create! valid_attributes
      get api_v1_notifications_url, as: :json
      expect(response).to be_successful
    end
  end

  describe 'GET /show' do
    it 'renders a successful response' do
      notification = Notification.create! valid_attributes
      get api_v1_notification_url(notification), as: :json
      expect(response).to be_successful
    end
  end
end
